@page
@model LoginModel
@{
    ViewData["Title"] = "Sign In";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Bike Ta Bai</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css" />
    <link rel="stylesheet" href="~/css/premium-minimal.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/auth-minimal.css" asp-append-version="true" />
</head>
<body>
    <!-- Minimalist Login Container -->
    <div class="auth-minimal-container">
        <div class="auth-card-minimal">
            <!-- Back to Home -->
            <a href="/" class="auth-back-link">
                <i class="bi bi-arrow-left"></i> Back to Home
            </a>
            
            <!-- Header -->
            <div class="auth-header-minimal">
                <div class="auth-logo-minimal">
                    <i class="bi bi-bicycle"></i>
                </div>
                <h1>Welcome Back</h1>
                <p>Sign in to continue your journey</p>
            </div>
            
            <!-- Alert Messages -->
            @if (!string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="auth-alert-minimal error">
                    <i class="bi bi-exclamation-triangle-fill"></i>
                    <div class="alert-content">
                        <strong>Error</strong>
                        <p>@Model.ErrorMessage</p>
                    </div>
                </div>
            }
            
            <!-- Login Form -->
            <form method="post" id="loginForm" novalidate>
                <!-- Email -->
                <div class="auth-form-group">
                    <label class="auth-form-label">
                        Email Address <span class="required">*</span>
                    </label>
                    <div class="auth-input-wrapper required" id="emailWrapper">
                        <input asp-for="Input.Email" type="email" class="auth-input" 
                               placeholder="Enter your email" required autofocus autocomplete="email" 
                               id="emailInput" data-validate="email" />
                        <i class="bi bi-envelope auth-input-icon"></i>
                        <i class="bi bi-x-circle validation-icon error"></i>
                        <i class="bi bi-check-circle validation-icon success"></i>
                    </div>
                    <div class="validation-message error" id="emailError" style="display: none;">
                        <i class="bi bi-exclamation-circle-fill"></i>
                        <span>Please enter a valid email address</span>
                    </div>
                    <span asp-validation-for="Input.Email" class="validation-message error"></span>
                </div>

                <!-- Password -->
                <div class="auth-form-group">
                    <label class="auth-form-label">
                        Password <span class="required">*</span>
                    </label>
                    <div class="auth-input-wrapper required" id="passwordWrapper">
                        <input asp-for="Input.Password" type="password" class="auth-input" 
                               placeholder="Enter your password" required autocomplete="current-password" 
                               id="passwordInput" data-validate="required" minlength="6" />
                        <i class="bi bi-lock auth-input-icon"></i>
                        <button type="button" class="auth-password-toggle" id="togglePassword">
                            <i class="bi bi-eye" id="toggleIcon"></i>
                        </button>
                    </div>
                    <div class="validation-message error" id="passwordError" style="display: none;">
                        <i class="bi bi-exclamation-circle-fill"></i>
                        <span>Password is required (minimum 6 characters)</span>
                    </div>
                    <span asp-validation-for="Input.Password" class="validation-message error"></span>
                </div>

                <!-- Remember Me & Forgot Password -->
                <div class="auth-form-options">
                    <div class="auth-checkbox-wrapper">
                        <input asp-for="Input.RememberMe" type="checkbox" id="rememberMe" />
                        <label for="rememberMe" class="auth-checkbox-label">Remember me</label>
                    </div>
                    <a href="/Account/ForgotPassword" class="auth-link">Forgot password?</a>
                </div>

                <!-- Submit Button -->
                <button type="submit" class="auth-btn-minimal auth-btn-primary">
                    <span class="btn-text">
                        <i class="bi bi-box-arrow-in-right"></i> Sign In
                    </span>
                    <span class="btn-loading" style="display: none;">
                        <span class="spinner-border spinner-border-sm"></span> Signing in...
                    </span>
                </button>

                <!-- Divider -->
                <div class="auth-divider">
                    <span>New to Bike Ta Bai?</span>
                </div>

                <!-- Register Link -->
                <a href="/Account/Register" class="auth-btn-minimal auth-btn-outline">
                    <i class="bi bi-person-plus"></i> Create Account
                </a>
            </form>
            
            <!-- Footer -->
            <div class="auth-footer-minimal">
                <p>ðŸŒ¿ Ride Green, Live Clean</p>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        $(document).ready(function() {
            // Password Toggle
            $('#togglePassword').click(function(e) {
                e.preventDefault();
                const passwordInput = $('#passwordInput');
                const toggleIcon = $('#toggleIcon');
                
                if (passwordInput.attr('type') === 'password') {
                    passwordInput.attr('type', 'text');
                    toggleIcon.removeClass('bi-eye').addClass('bi-eye-slash');
                } else {
                    passwordInput.attr('type', 'password');
                    toggleIcon.removeClass('bi-eye-slash').addClass('bi-eye');
                }
            });

            // Real-time Email Validation
            $('#emailInput').on('input blur', function() {
                const email = $(this).val();
                const emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
                const wrapper = $('#emailWrapper');
                const errorMsg = $('#emailError');
                
                if (email.length === 0) {
                    // Empty field
                    wrapper.removeClass('has-error has-success');
                    $(this).removeClass('error success');
                    errorMsg.hide();
                } else if (emailRegex.test(email)) {
                    // Valid email
                    wrapper.removeClass('has-error').addClass('has-success');
                    $(this).removeClass('error').addClass('success');
                    errorMsg.hide();
                } else {
                    // Invalid email
                    wrapper.removeClass('has-success').addClass('has-error');
                    $(this).removeClass('success').addClass('error');
                    errorMsg.show();
                }
            });

            // Real-time Password Validation
            $('#passwordInput').on('input blur', function() {
                const password = $(this).val();
                const wrapper = $('#passwordWrapper');
                const errorMsg = $('#passwordError');
                
                if (password.length === 0) {
                    // Empty field
                    wrapper.removeClass('has-error has-success');
                    $(this).removeClass('error success');
                    errorMsg.hide();
                } else if (password.length >= 6) {
                    // Valid password
                    wrapper.removeClass('has-error').addClass('has-success');
                    $(this).removeClass('error').addClass('success');
                    errorMsg.hide();
                } else {
                    // Invalid password
                    wrapper.removeClass('has-success').addClass('has-error');
                    $(this).removeClass('success').addClass('error');
                    errorMsg.show();
                }
            });

            // Form Submit with Validation
            $('#loginForm').submit(function(e) {
                let isValid = true;
                
                // Validate Email
                const email = $('#emailInput').val();
                const emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;
                if (!email || !emailRegex.test(email)) {
                    $('#emailWrapper').addClass('has-error');
                    $('#emailInput').addClass('error');
                    $('#emailError').show();
                    isValid = false;
                }
                
                // Validate Password
                const password = $('#passwordInput').val();
                if (!password || password.length < 6) {
                    $('#passwordWrapper').addClass('has-error');
                    $('#passwordInput').addClass('error');
                    $('#passwordError').show();
                    isValid = false;
                }
                
                if (!isValid) {
                    e.preventDefault();
                    // Scroll to first error
                    $('html, body').animate({
                        scrollTop: $('.has-error').first().offset().top - 100
                    }, 300);
                    return false;
                }
                
                // Show loading state
                const submitBtn = $(this).find('button[type="submit"]');
                submitBtn.find('.btn-text').hide();
                submitBtn.find('.btn-loading').show();
                submitBtn.prop('disabled', true);
            });

            // Auto-hide error message after 5 seconds
            setTimeout(function() {
                $('.auth-alert-minimal').fadeOut(500);
            }, 5000);
            
            // Focus effect - remove error on focus
            $('.auth-input').on('focus', function() {
                $(this).closest('.auth-input-wrapper').removeClass('has-error');
                $(this).removeClass('error');
            });
        });
    </script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
</body>
</html>
