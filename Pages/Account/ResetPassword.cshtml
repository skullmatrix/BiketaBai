@page
@model ResetPasswordModel
@{
    ViewData["Title"] = "Reset Password";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Bike Ta Bai</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css" />
    <link rel="stylesheet" href="~/css/premium-minimal.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/auth-minimal.css" asp-append-version="true" />
</head>
<body>
    <!-- Minimalist Reset Password Container -->
    <div class="auth-minimal-container">
        <div class="auth-card-minimal" style="max-width: 500px;">
            @if (Model.IsTokenValid)
            {
                <!-- Back to Login -->
                <a href="/Account/Login" class="auth-back-link">
                    <i class="bi bi-arrow-left"></i> Back to Login
                </a>
                
                <!-- Header -->
                <div class="auth-header-minimal">
                    <div class="auth-logo-minimal">
                        <i class="bi bi-shield-lock"></i>
                    </div>
                    <h1>Reset Your Password</h1>
                    <p>Create a new secure password</p>
                </div>
                
                <!-- Error Message -->
                @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                {
                    <div class="error-summary">
                        <div class="error-summary-title">
                            <i class="bi bi-exclamation-triangle-fill"></i> Error
                        </div>
                        <p style="margin: 0.75rem 0 0 0; color: #991B1B;">@Model.ErrorMessage</p>
                    </div>
                }
                
                <!-- Reset Password Form -->
                <form method="post" id="resetPasswordForm" novalidate>
                    <input type="hidden" asp-for="Input.Token" />
                    <input type="hidden" asp-for="Input.Email" />

                    <!-- New Password -->
                    <div class="auth-form-group">
                        <label class="auth-form-label">
                            New Password <span class="required">*</span>
                        </label>
                        <div class="auth-input-wrapper has-toggle" id="passwordWrapper">
                            <input asp-for="Input.NewPassword" type="password" class="auth-input" 
                                   placeholder="Create a strong password" required autofocus 
                                   id="passwordInput" minlength="8" />
                            <i class="bi bi-lock auth-input-icon"></i>
                            <button type="button" class="auth-password-toggle" id="togglePassword">
                                <i class="bi bi-eye" id="toggleIcon"></i>
                            </button>
                        </div>
                        
                        <!-- Password Strength Indicator -->
                        <div class="auth-password-strength" id="passwordStrength">
                            <div class="auth-strength-bar">
                                <div class="auth-strength-fill"></div>
                            </div>
                            <span class="auth-strength-text">Enter password</span>
                        </div>
                        
                        <!-- Password Requirements -->
                        <div class="field-requirements" id="passwordRequirements">
                            <div class="field-requirements-title">
                                <i class="bi bi-shield-check"></i> Password must contain:
                            </div>
                            <div class="field-requirement" id="req-length">
                                <i class="bi bi-circle"></i> At least 8 characters
                            </div>
                            <div class="field-requirement" id="req-uppercase">
                                <i class="bi bi-circle"></i> One uppercase letter
                            </div>
                            <div class="field-requirement" id="req-lowercase">
                                <i class="bi bi-circle"></i> One lowercase letter
                            </div>
                            <div class="field-requirement" id="req-number">
                                <i class="bi bi-circle"></i> One number
                            </div>
                        </div>
                        <span asp-validation-for="Input.NewPassword" class="validation-message error"></span>
                    </div>

                    <!-- Confirm Password -->
                    <div class="auth-form-group">
                        <label class="auth-form-label">
                            Confirm Password <span class="required">*</span>
                        </label>
                        <div class="auth-input-wrapper has-toggle" id="confirmPasswordWrapper">
                            <input asp-for="Input.ConfirmPassword" type="password" class="auth-input" 
                                   placeholder="Re-enter your password" required 
                                   id="confirmPasswordInput" />
                            <i class="bi bi-lock-fill auth-input-icon"></i>
                            <button type="button" class="auth-password-toggle" id="toggleConfirmPassword">
                                <i class="bi bi-eye" id="toggleConfirmIcon"></i>
                            </button>
                            <i class="bi bi-x-circle validation-icon error"></i>
                            <i class="bi bi-check-circle validation-icon success"></i>
                        </div>
                        <div class="validation-message error" id="confirmPasswordError" style="display: none;">
                            <i class="bi bi-exclamation-circle-fill"></i>
                            <span>Passwords do not match</span>
                        </div>
                        <span asp-validation-for="Input.ConfirmPassword" class="validation-message error"></span>
                    </div>

                    <!-- Submit Button -->
                    <button type="submit" class="auth-btn-minimal auth-btn-primary">
                        <span class="btn-text">
                            <i class="bi bi-check-circle"></i> Reset Password
                        </span>
                        <span class="btn-loading" style="display: none;">
                            <span class="spinner-border spinner-border-sm"></span> Resetting...
                        </span>
                    </button>
                </form>
                
                <!-- Footer -->
                <div class="auth-footer-minimal">
                    <p>ðŸŒ¿ Ride Green, Live Clean</p>
                </div>
            }
            else
            {
                <!-- Back to Login -->
                <a href="/Account/Login" class="auth-back-link">
                    <i class="bi bi-arrow-left"></i> Back to Login
                </a>
                
                <!-- Error Icon -->
                <div class="text-center mb-4">
                    <div class="auth-logo-minimal" style="width: 80px; height: 80px; font-size: 40px; margin: 0 auto 1.5rem; background: linear-gradient(135deg, #EF4444 0%, #DC2626 100%); color: #ffffff;">
                        <i class="bi bi-x-circle-fill"></i>
                    </div>
                </div>
                
                <!-- Header -->
                <div class="auth-header-minimal">
                    <h1 style="color: #EF4444;">Invalid or Expired Link</h1>
                    <p>The password reset link is no longer valid</p>
                </div>
                
                <!-- Error Message -->
                <div class="error-summary">
                    <div class="error-summary-title">
                        <i class="bi bi-exclamation-triangle-fill"></i> Link Error
                    </div>
                    <p style="margin: 0.75rem 0 0 0; color: #991B1B;">@Model.ErrorMessage</p>
                </div>
                
                <!-- Info Box -->
                <div class="helper-text" style="background: #FFF3CD; padding: 1rem; border-radius: 0.5rem; margin-top: 1rem;">
                    <i class="bi bi-info-circle" style="color: #F59E0B;"></i>
                    <div>
                        <strong>Security Notice:</strong><br>
                        <small style="color: #4a4a4a;">Password reset links expire after 1 hour for your security. Please request a new reset link.</small>
                    </div>
                </div>
                
                <!-- Action Buttons -->
                <div style="display: flex; gap: 0.75rem; margin-top: 1.5rem;">
                    <a href="/Account/ForgotPassword" class="auth-btn-minimal auth-btn-primary" style="flex: 1;">
                        <i class="bi bi-arrow-clockwise"></i> Request New Link
                    </a>
                    <a href="/Account/Login" class="auth-btn-minimal auth-btn-outline" style="flex: 1;">
                        <i class="bi bi-box-arrow-in-right"></i> Login
                    </a>
                </div>
                
                <!-- Footer -->
                <div class="auth-footer-minimal">
                    <p>ðŸŒ¿ Ride Green, Live Clean</p>
                </div>
            }
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        $(document).ready(function() {
            // Password Toggle
            $('#togglePassword, #toggleConfirmPassword').click(function(e) {
                e.preventDefault();
                const isPassword = $(this).attr('id') === 'togglePassword';
                const passwordInput = isPassword ? $('#passwordInput') : $('#confirmPasswordInput');
                const toggleIcon = isPassword ? $('#toggleIcon') : $('#toggleConfirmIcon');
                
                if (passwordInput.attr('type') === 'password') {
                    passwordInput.attr('type', 'text');
                    toggleIcon.removeClass('bi-eye').addClass('bi-eye-slash');
                } else {
                    passwordInput.attr('type', 'password');
                    toggleIcon.removeClass('bi-eye-slash').addClass('bi-eye');
                }
            });

            // Password Strength & Requirements
            $('#passwordInput').on('input', function() {
                const password = $(this).val();
                let strength = 0;
                
                // Check requirements
                const hasLength = password.length >= 8;
                const hasUppercase = password.match(/[A-Z]/);
                const hasLowercase = password.match(/[a-z]/);
                const hasNumber = password.match(/[0-9]/);
                
                // Update requirement indicators
                $('#req-length').toggleClass('met', hasLength).toggleClass('unmet', !hasLength);
                $('#req-uppercase').toggleClass('met', hasUppercase).toggleClass('unmet', !hasUppercase);
                $('#req-lowercase').toggleClass('met', hasLowercase).toggleClass('unmet', !hasLowercase);
                $('#req-number').toggleClass('met', hasNumber).toggleClass('unmet', !hasNumber);
                
                $('#req-length i').removeClass('bi-circle bi-check-circle-fill');
                $('#req-length i').addClass(hasLength ? 'bi-check-circle-fill' : 'bi-circle');
                
                $('#req-uppercase i').removeClass('bi-circle bi-check-circle-fill');
                $('#req-uppercase i').addClass(hasUppercase ? 'bi-check-circle-fill' : 'bi-circle');
                
                $('#req-lowercase i').removeClass('bi-circle bi-check-circle-fill');
                $('#req-lowercase i').addClass(hasLowercase ? 'bi-check-circle-fill' : 'bi-circle');
                
                $('#req-number i').removeClass('bi-circle bi-check-circle-fill');
                $('#req-number i').addClass(hasNumber ? 'bi-check-circle-fill' : 'bi-circle');
                
                // Calculate strength
                if (password.length >= 8) strength++;
                if (password.match(/[a-z]/)) strength++;
                if (password.match(/[A-Z]/)) strength++;
                if (password.match(/[0-9]/)) strength++;
                if (password.match(/[^a-zA-Z0-9]/)) strength++;

                const strengthBar = $('.auth-strength-fill');
                const strengthText = $('.auth-strength-text');
                
                strengthBar.removeClass('weak medium strong');
                
                if (strength <= 2) {
                    strengthBar.addClass('weak').css('width', '33%');
                    strengthText.text('Weak password');
                } else if (strength === 3 || strength === 4) {
                    strengthBar.addClass('medium').css('width', '66%');
                    strengthText.text('Medium password');
                } else {
                    strengthBar.addClass('strong').css('width', '100%');
                    strengthText.text('Strong password');
                }
            });
            
            // Confirm Password Validation
            $('#confirmPasswordInput').on('input blur', function() {
                const password = $('#passwordInput').val();
                const confirmPassword = $(this).val();
                const wrapper = $('#confirmPasswordWrapper');
                const errorMsg = $('#confirmPasswordError');
                
                if (confirmPassword.length === 0) {
                    wrapper.removeClass('has-error has-success');
                    $(this).removeClass('error success');
                    errorMsg.hide();
                } else if (password === confirmPassword) {
                    wrapper.removeClass('has-error').addClass('has-success');
                    $(this).removeClass('error').addClass('success');
                    errorMsg.hide();
                } else {
                    wrapper.removeClass('has-success').addClass('has-error');
                    $(this).removeClass('success').addClass('error');
                    errorMsg.show();
                }
            });

            // Form Submit with Validation
            $('#resetPasswordForm').submit(function(e) {
                let isValid = true;
                
                // Validate Password
                const password = $('#passwordInput').val();
                if (!password || password.length < 8 || !password.match(/[a-z]/) || 
                    !password.match(/[A-Z]/) || !password.match(/[0-9]/)) {
                    isValid = false;
                }
                
                // Validate Confirm Password
                const confirmPassword = $('#confirmPasswordInput').val();
                if (password !== confirmPassword) {
                    $('#confirmPasswordWrapper').addClass('has-error');
                    $('#confirmPasswordInput').addClass('error');
                    $('#confirmPasswordError').show();
                    isValid = false;
                }
                
                if (!isValid) {
                    e.preventDefault();
                    return false;
                }
                
                // Show loading state
                const submitBtn = $(this).find('button[type="submit"]');
                submitBtn.find('.btn-text').hide();
                submitBtn.find('.btn-loading').show();
                submitBtn.prop('disabled', true);
            });

            // Focus effect
            $('.auth-input').on('focus', function() {
                $(this).closest('.auth-input-wrapper').removeClass('has-error');
                $(this).removeClass('error');
            });
        });
    </script>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
</body>
</html>
