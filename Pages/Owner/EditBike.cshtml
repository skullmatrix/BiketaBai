@page "{id:int}"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@model EditBikeModel
@{
    ViewData["Title"] = "Edit Bike";
}

<!-- Link Minimal CSS -->
<link rel="stylesheet" href="~/css/bikes-minimal.css" asp-append-version="true" />

<div class="addbike-premium-container">
    <div class="container">
        <!-- Compact Header -->
        <div class="addbike-premium-header">
            <a href="/Owner/MyBikes" class="btn-back-premium">
                <i class="bi bi-arrow-left"></i>
            </a>
            <div class="header-content">
                <h1 class="page-title-premium">Edit Bike</h1>
                <p class="page-subtitle-premium">Update your listing details</p>
            </div>
        </div>

        <!-- Alerts -->
        @if (!string.IsNullOrEmpty(Model.SuccessMessage))
        {
            <div class="alert-premium success">
                <i class="bi bi-check-circle-fill"></i>
                <span>@Model.SuccessMessage</span>
            </div>
        }
        
        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div class="alert-premium error">
                <i class="bi bi-exclamation-triangle-fill"></i>
                <span>@Model.ErrorMessage</span>
            </div>
        }

        <!-- Premium Form Card -->
        <div class="form-card-premium">
            <form method="post" enctype="multipart/form-data" id="editBikeForm">
                
                <!-- Step 1: Basic Details -->
                <div class="step-section-premium">
                    <div class="step-indicator">
                        <span class="step-badge">1</span>
                        <h3>Basic Details</h3>
                    </div>

                    <div class="fields-grid">
                        <div class="field-premium">
                            <label>Brand<span class="req">*</span></label>
                            <div class="input-wrapper-premium">
                                <i class="bi bi-tag-fill"></i>
                                <input asp-for="Input.Brand" 
                                       placeholder="e.g., Trek, Giant" 
                                       required />
                            </div>
                            <span asp-validation-for="Input.Brand" class="field-error"></span>
                        </div>

                        <div class="field-premium">
                            <label>Model<span class="req">*</span></label>
                            <div class="input-wrapper-premium">
                                <i class="bi bi-bicycle"></i>
                                <input asp-for="Input.Model" 
                                       placeholder="e.g., Mountain X5" 
                                       required />
                            </div>
                            <span asp-validation-for="Input.Model" class="field-error"></span>
                        </div>

                        <div class="field-premium field-full">
                            <label>Type<span class="req">*</span></label>
                            <div class="input-wrapper-premium">
                                <i class="bi bi-list-ul"></i>
                                <select asp-for="Input.BikeTypeId" required>
                                    <option value="">Choose type...</option>
                                    @foreach (var type in Model.BikeTypes)
                                    {
                                        <option value="@type.BikeTypeId">@type.TypeName</option>
                                    }
                                </select>
                            </div>
                            <span asp-validation-for="Input.BikeTypeId" class="field-error"></span>
                        </div>

                        <div class="field-premium field-full">
                            <label>Description<span class="opt">(Optional)</span></label>
                            <div class="input-wrapper-premium">
                                <i class="bi bi-card-text"></i>
                                <textarea asp-for="Input.Description" 
                                          rows="2"
                                          placeholder="Special features or details..."></textarea>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Divider -->
                <div class="section-divider"></div>

                <!-- Step 2: Pricing -->
                <div class="step-section-premium">
                    <div class="step-indicator">
                        <span class="step-badge">2</span>
                        <h3>Set Your Rates</h3>
                    </div>

                    <div class="fields-grid">
                        <div class="field-premium">
                            <label>Hourly Rate<span class="req">*</span></label>
                            <div class="input-wrapper-premium input-price">
                                <span class="currency">₱</span>
                                <input asp-for="Input.HourlyRate" 
                                       type="number" 
                                       step="0.01" 
                                       min="1"
                                       placeholder="50" 
                                       required />
                                <span class="unit">/hr</span>
                            </div>
                            <small class="field-hint">Recommended: ₱30-100</small>
                            <span asp-validation-for="Input.HourlyRate" class="field-error"></span>
                        </div>

                        <div class="field-premium">
                            <label>Daily Rate<span class="req">*</span></label>
                            <div class="input-wrapper-premium input-price">
                                <span class="currency">₱</span>
                                <input asp-for="Input.DailyRate" 
                                       type="number" 
                                       step="0.01" 
                                       min="1"
                                       placeholder="300" 
                                       required />
                                <span class="unit">/day</span>
                            </div>
                            <small class="field-hint">Recommended: ₱200-800</small>
                            <span asp-validation-for="Input.DailyRate" class="field-error"></span>
                        </div>
                    </div>

                    <!-- Pricing Tip -->
                    <div class="tip-premium">
                        <i class="bi bi-lightning-charge-fill"></i>
                        <span>Daily rates are typically 8x hourly (full day rental)</span>
                    </div>
                </div>

                <!-- Divider -->
                <div class="section-divider"></div>

                <!-- Step 3: Availability -->
                <div class="step-section-premium">
                    <div class="step-indicator">
                        <span class="step-badge">3</span>
                        <h3>Availability Status</h3>
                    </div>

                    <div class="fields-grid">
                        <div class="field-premium field-full">
                            <label>Status<span class="req">*</span></label>
                            <div class="input-wrapper-premium">
                                <i class="bi bi-toggle-on"></i>
                                <select asp-for="Input.AvailabilityStatusId" required class="status-select-premium">
                                    <option value="1" data-status="available">Available</option>
                                    <option value="3" data-status="maintenance">Maintenance</option>
                                    <option value="4" data-status="inactive">Inactive</option>
                                </select>
                            </div>
                            <small class="field-hint">"Rented" status is set automatically when booked</small>
                        </div>
                    </div>
                </div>

                <!-- Divider -->
                <div class="section-divider"></div>

                <!-- Step 4: Photos -->
                <div class="step-section-premium">
                    <div class="step-indicator">
                        <span class="step-badge">4</span>
                        <h3>Manage Photos</h3>
                    </div>

                    <!-- Current Images -->
                    @if (Model.CurrentBike?.BikeImages.Any() == true)
                    {
                        <div class="current-photos-section">
                            <label class="current-photos-label">Current Photos</label>
                            <div class="current-photos-grid" id="currentPhotosGrid">
                                @foreach (var image in Model.CurrentBike.BikeImages)
                                {
                                    <div class="current-photo-card" data-image-id="@image.ImageId">
                                        <img src="@image.ImageUrl" alt="Bike photo" />
                                        @if (image.IsPrimary)
                                        {
                                            <span class="main-badge">Main</span>
                                        }
                                        <button type="button" 
                                                class="btn-remove-current" 
                                                onclick="confirmDeleteImage(@image.ImageId, @Model.CurrentBike.BikeId)"
                                                title="Delete photo">
                                            <i class="bi bi-x-lg"></i>
                                        </button>
                                    </div>
                                }
                            </div>
                        </div>
                    }

                    <!-- Upload Zone for New Images -->
                    <div class="upload-zone-premium" id="uploadZone">
                        <input asp-for="Input.NewImages" 
                               type="file" 
                               id="bikeImages" 
                               class="file-input-hidden" 
                               multiple 
                               accept="image/*" />
                        
                        <!-- Upload Prompt -->
                        <div class="upload-prompt" id="uploadPrompt">
                            <div class="upload-icon-circle">
                                <i class="bi bi-images"></i>
                            </div>
                            <p class="upload-text">Add new photos (optional)</p>
                            <div class="upload-actions-improved">
                                <button type="button" class="btn-upload-improved gallery" id="galleryBtn">
                                    <i class="bi bi-folder2-open"></i>
                                    <span>Choose Photos</span>
                                </button>
                                <button type="button" class="btn-upload-improved camera" id="cameraBtn">
                                    <i class="bi bi-camera-fill"></i>
                                    <span>Take Photo</span>
                                </button>
                            </div>
                        </div>

                        <!-- Photo Grid -->
                        <div class="photos-grid-premium" id="photosGrid" style="display: none;"></div>

                        <!-- Add More -->
                        <button type="button" class="btn-add-photo" id="addMoreBtn" style="display: none;">
                            <i class="bi bi-plus-lg"></i> Add More
                        </button>
                    </div>

                    <div class="upload-note">
                        <i class="bi bi-info-circle-fill"></i>
                        <span>JPG, PNG • Max 5 photos total • First photo is main</span>
                    </div>
                </div>

                <!-- Stats Info Box -->
                <div class="info-box-premium">
                    <div class="info-item-inline">
                        <i class="bi bi-calendar-check"></i>
                        <span>Listed: @Model.CurrentBike?.CreatedAt.ToString("MMM dd, yyyy")</span>
                    </div>
                    <div class="info-item-inline">
                        <i class="bi bi-clock-history"></i>
                        <span>Total Bookings: @Model.TotalBookings</span>
                    </div>
                    <div class="info-item-inline">
                        <i class="bi bi-star-fill"></i>
                        <span>Rating: @Model.AverageRating.ToString("F1")</span>
                    </div>
                </div>

                <!-- Submit Section -->
                <div class="submit-section-premium">
                    <button type="submit" class="btn-submit-premium" id="submitBtn">
                        <i class="bi bi-check-circle-fill"></i>
                        <span>Save Changes</span>
                    </button>
                    <a href="/Owner/MyBikes" class="btn-cancel-premium">Cancel</a>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Delete Image Modal -->
<div class="modal fade" id="deleteImageModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content modal-premium">
            <div class="modal-header-premium">
                <div class="modal-icon-danger">
                    <i class="bi bi-exclamation-triangle-fill"></i>
                </div>
                <h5>Delete Photo?</h5>
                <button type="button" class="btn-close-premium" data-bs-dismiss="modal">×</button>
            </div>
            <div class="modal-body-premium">
                <p>Are you sure you want to delete this photo? This action cannot be undone.</p>
            </div>
            <div class="modal-footer-premium">
                <button type="button" class="btn-modal-cancel" data-bs-dismiss="modal">Cancel</button>
                <form method="post" id="deleteImageForm" asp-page-handler="DeleteImage" style="display: inline;">
                    <input type="hidden" name="id" value="@Model.CurrentBike?.BikeId" />
                    <input type="hidden" name="imageId" id="deleteImageId" />
                    <button type="submit" class="btn-modal-danger">
                        <i class="bi bi-trash3-fill"></i> Delete Photo
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script>
        $(document).ready(function() {
            let newPhotos = [];
            const maxPhotos = 5;
            const currentPhotosCount = @(Model.CurrentBike?.BikeImages.Count ?? 0);
            const fileInput = $('#bikeImages');
            
            // Upload buttons
            $('#galleryBtn').click(function() {
                // Remove capture attribute to open file picker
                fileInput.removeAttr('capture');
                fileInput.click();
            });
            
            $('#cameraBtn').click(function() {
                // Add capture attribute to open camera directly
                fileInput.attr('capture', 'environment');
                fileInput.click();
            });
            
            $('#addMoreBtn').click(function() {
                fileInput.click();
            });
            
            // Handle file selection
            fileInput.change(function(e) {
                const files = Array.from(e.target.files);
                if (files.length === 0) return;
                
                const totalPhotos = currentPhotosCount + newPhotos.length;
                const availableSlots = maxPhotos - totalPhotos;
                
                if (availableSlots <= 0) {
                    alert('Maximum 5 photos allowed. Please delete existing photos first.');
                    return;
                }
                
                files.forEach(file => {
                    if (newPhotos.length < availableSlots) {
                        newPhotos.push(file);
                    }
                });
                
                updatePhotosDisplay();
            });
            
            // Update photos display
            function updatePhotosDisplay() {
                if (newPhotos.length === 0) {
                    $('#uploadPrompt').show();
                    $('#photosGrid').hide();
                    $('#addMoreBtn').hide();
                    return;
                }
                
                $('#uploadPrompt').hide();
                $('#photosGrid').show().empty();
                
                newPhotos.forEach((file, idx) => {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const photoCard = $(`
                            <div class="photo-card-premium">
                                <img src="${e.target.result}" alt="Photo ${idx + 1}">
                                ${idx === 0 && currentPhotosCount === 0 ? '<span class="main-badge">Main</span>' : ''}
                                <button type="button" class="btn-remove-photo" data-idx="${idx}">
                                    <i class="bi bi-x-lg"></i>
                                </button>
                            </div>
                        `);
                        $('#photosGrid').append(photoCard);
                    };
                    reader.readAsDataURL(file);
                });
                
                const totalPhotos = currentPhotosCount + newPhotos.length;
                if (totalPhotos < maxPhotos) {
                    $('#addMoreBtn').show();
                } else {
                    $('#addMoreBtn').hide();
                }
            }
            
            // Remove new photo
            $('#photosGrid').on('click', '.btn-remove-photo', function() {
                const idx = $(this).data('idx');
                newPhotos.splice(idx, 1);
                updatePhotosDisplay();
            });
            
            // Form submission
            $('#editBikeForm').submit(function(e) {
                // Check HTML5 validation
                const form = this;
                if (!form.checkValidity()) {
                    e.preventDefault();
                    e.stopPropagation();
                    form.classList.add('was-validated');
                    return false;
                }
                
                // Prepare files for submission
                const dataTransfer = new DataTransfer();
                newPhotos.forEach(file => dataTransfer.items.add(file));
                fileInput[0].files = dataTransfer.files;
                
                // Only disable button if form is valid
                $('#submitBtn').prop('disabled', true)
                    .html('<i class="bi bi-hourglass-split"></i> <span>Saving...</span>');
                
                return true;
            });
            
            // Auto-dismiss alerts
            setTimeout(() => {
                $('.alert-premium').fadeOut(300, function() { $(this).remove(); });
            }, 5000);
            
            // Auto-calculate daily rate (8 hours = standard day)
            let calcTimeout;
            $('#Input_HourlyRate').on('input', function() {
                const hourlyInput = $(this);
                clearTimeout(calcTimeout);
                
                // Wait 500ms after user stops typing
                calcTimeout = setTimeout(function() {
                    const hourly = parseFloat(hourlyInput.val());
                    const dailyInput = $('#Input_DailyRate');
                    const dailyValue = dailyInput.val();
                    
                    // Auto-calculate if hourly is valid and daily is empty or invalid
                    if (hourly > 0 && (!dailyValue || dailyValue === '' || parseFloat(dailyValue) === 0 || isNaN(parseFloat(dailyValue)))) {
                        dailyInput.val(Math.round(hourly * 8));
                    }
                }, 500);
            });
        });
        
        // Delete image confirmation
        function confirmDeleteImage(imageId, bikeId) {
            $('#deleteImageId').val(imageId);
            const deleteModal = new bootstrap.Modal(document.getElementById('deleteImageModal'));
            deleteModal.show();
        }
        
        // Loading state on delete
        $('#deleteImageForm').submit(function() {
            $(this).find('.btn-modal-danger').html('<span class="spinner-border spinner-border-sm me-2"></span>Deleting...').prop('disabled', true);
        });
    </script>
}
